{"version":3,"sources":["index.js"],"names":["Square","value","onClick","style","className","Board","i","ifWinner","this","props","winnerCellsIndex","bolded","includes","color","border","squares","key","row","Array","fill","column","counter","map","index","renderSquare","React","Component","Game","handleClick","history","state","slice","stepNumber","length","calculateWinner","xIsNext","historyIndex","push","setState","concat","isSort","jumpTo","step","sort","current","winner","console","log","status","moves","move","position","marksPosition","desc","a","b","lines","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f90d2d3.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst Square = ({ value, onClick, style }) => {\n  return (\n    <button className=\"square\" onClick={onClick} style={style}>\n      {value}\n    </button>\n  );\n};\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    let style = {};\n    let ifWinner = this.props.winnerCellsIndex;\n    if (this.props.bolded === i || (ifWinner && ifWinner.includes(i))) {\n      style = {\n        color: \"red\",\n        border: \"3px solid black\",\n      };\n    }\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n        key={i}\n        style={style}\n      />\n    );\n  }\n  render() {\n    let row = Array(3).fill(null);\n    let column = Array(3).fill(null);\n    let counter = 0;\n\n    row = row.map((i, index) => {\n      return (\n        <div className=\"board-row\" key={index}>\n          {\n            (column = column.map(() => {\n              return this.renderSquare(counter++);\n            }))\n          }\n        </div>\n      );\n    });\n    return <div>{row}</div>;\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      xIsNext: true,\n      stepNumber: 0,\n      historyIndex: [],\n      bolded: null,\n    };\n  }\n\n  handleClick = (i) => {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    let index = this.state.historyIndex.slice();\n    index.length = this.state.stepNumber;\n    index.push(i);\n\n    this.setState(() => {\n      return {\n        history: history.concat([\n          {\n            squares: squares,\n          },\n        ]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n        historyIndex: index,\n        isSort: false,\n      };\n    });\n  };\n\n  jumpTo = (step) => {\n    let indexHistory = this.state.historyIndex.slice();\n    let index = indexHistory[step - 1];\n\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n      bolded: index,\n    });\n  };\n\n  sort = () => {\n    this.setState(() => {\n      return {\n        isSort: !this.state.isSort,\n      };\n    });\n  };\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    console.log(current, \"current\");\n\n    const moves = history.map((step, move) => {\n      const position = marksPosition(this.state.historyIndex[move - 1]);\n      const desc = move ? \"go to move number \" + position : \"go to start\";\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    if (this.state.isSort) {\n      moves.sort((a, b) => b.key - a.key);\n    }\n\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner[0];\n    } else {\n      current.squares.includes(null)\n        ? (status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\"))\n        : (status = \"We end it in a draw\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <div className=\"status\">{status}</div>\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            bolded={this.state.bolded}\n            winnerCellsIndex={winner}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button\n            onClick={() => {\n              this.sort();\n            }}\n          >\n            push to sort\n          </button>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], a, b, c];\n    }\n  }\n  return null;\n}\n\nfunction marksPosition(index) {\n  switch (index) {\n    case 0:\n      return \" row 1 col 1\";\n    case 1:\n      return \" row 1 col 2\";\n    case 2:\n      return \" row 1 col 3\";\n    case 3:\n      return \" row 2 col 1\";\n    case 4:\n      return \" row 2 col 2\";\n    case 5:\n      return \" row 2 col 3\";\n    case 6:\n      return \" row 3 col 1\";\n    case 7:\n      return \" row 3 col 2\";\n    case 8:\n      return \" row 3 col 3\";\n    default:\n      return null;\n  }\n}\n"],"sourceRoot":""}